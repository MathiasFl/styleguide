{"ast":null,"code":"var _jsxFileName = \"/Users/mikaelbrevik/Sites/variant/styleguide/web/src/blobs/color-select.tsx\";\nimport * as React from \"react\";\nimport { allColorRecords, randomColorRecord } from \"../color-grid/colors\";\nimport Select from \"react-select\";\nimport css from \"./blobs.module.css\";\n\nconst ColorSelect = ({\n  value,\n  onChange\n}) => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: css.colorGroup,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    label: \"Colors\",\n    value: value,\n    onChange: v => onChange(v),\n    options: allColorRecords,\n    styles: colourStyles,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    className: css.customColorPickerContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, \"All colors:\", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"color\",\n    onChange: e => {\n      const value = e.currentTarget.value;\n      onChange({\n        value,\n        label: value\n      });\n    },\n    value: value.value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: css.rightPos,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: css.smallButton,\n    onClick: () => onChange(randomColorRecord()),\n    type: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, \"Random color\")));\n};\n\nexport default ColorSelect;\n\nconst colorSwatch = (color = \"#ccc\") => ({\n  alignItems: \"center\",\n  display: \"flex\",\n  \":before\": {\n    backgroundColor: color,\n    borderRadius: 3,\n    content: '\" \"',\n    display: \"block\",\n    marginRight: 8,\n    height: 15,\n    width: 25\n  }\n});\n\nconst colourStyles = {\n  input: styles => ({ ...styles,\n    ...colorSwatch()\n  }),\n  placeholder: styles => ({ ...styles,\n    ...colorSwatch()\n  }),\n  option: (styles, {\n    data\n  }) => ({ ...styles,\n    ...colorSwatch(data.value)\n  }),\n  singleValue: (styles, {\n    data\n  }) => ({ ...styles,\n    ...colorSwatch(data.value)\n  })\n};","map":{"version":3,"sources":["/Users/mikaelbrevik/Sites/variant/styleguide/web/src/blobs/color-select.tsx"],"names":["React","allColorRecords","randomColorRecord","Select","css","ColorSelect","value","onChange","colorGroup","v","colourStyles","customColorPickerContainer","e","currentTarget","label","rightPos","smallButton","colorSwatch","color","alignItems","display","backgroundColor","borderRadius","content","marginRight","height","width","input","styles","placeholder","option","data","singleValue"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,eAAT,EAA0BC,iBAA1B,QAAmD,sBAAnD;AACA,OAAOC,MAAP,MAA+B,cAA/B;AACA,OAAOC,GAAP,MAAgB,oBAAhB;;AAYA,MAAMC,WAAuC,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,KAAyB;AACvE,sBACE;AAAK,IAAA,SAAS,EAAEH,GAAG,CAACI,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AACE,IAAA,KAAK,EAAC,QADR;AAEE,IAAA,KAAK,EAAEF,KAFT;AAGE,IAAA,QAAQ,EAAGG,CAAD,IAAOF,QAAQ,CAACE,CAAD,CAH3B;AAIE,IAAA,OAAO,EAAER,eAJX;AAKE,IAAA,MAAM,EAAES,YALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eASE;AAAO,IAAA,SAAS,EAAEN,GAAG,CAACO,0BAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAEE;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,QAAQ,EAAGC,CAAD,IAAO;AACf,YAAMN,KAAK,GAAGM,CAAC,CAACC,aAAF,CAAgBP,KAA9B;AACAC,MAAAA,QAAQ,CAAC;AAAED,QAAAA,KAAF;AAASQ,QAAAA,KAAK,EAAER;AAAhB,OAAD,CAAR;AACD,KALH;AAME,IAAA,KAAK,EAAEA,KAAK,CAACA,KANf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CATF,eAqBE;AAAK,IAAA,SAAS,EAAEF,GAAG,CAACW,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,SAAS,EAAEX,GAAG,CAACY,WADjB;AAEE,IAAA,OAAO,EAAE,MAAMT,QAAQ,CAACL,iBAAiB,EAAlB,CAFzB;AAGE,IAAA,IAAI,EAAC,QAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CArBF,CADF;AAiCD,CAlCD;;AAmCA,eAAeG,WAAf;;AAEA,MAAMY,WAAW,GAAG,CAACC,KAAK,GAAG,MAAT,MAAqB;AACvCC,EAAAA,UAAU,EAAE,QAD2B;AAEvCC,EAAAA,OAAO,EAAE,MAF8B;AAIvC,aAAW;AACTC,IAAAA,eAAe,EAAEH,KADR;AAETI,IAAAA,YAAY,EAAE,CAFL;AAGTC,IAAAA,OAAO,EAAE,KAHA;AAITH,IAAAA,OAAO,EAAE,OAJA;AAKTI,IAAAA,WAAW,EAAE,CALJ;AAMTC,IAAAA,MAAM,EAAE,EANC;AAOTC,IAAAA,KAAK,EAAE;AAPE;AAJ4B,CAArB,CAApB;;AAeA,MAAMhB,YAA6B,GAAG;AACpCiB,EAAAA,KAAK,EAAGC,MAAD,KAAa,EAAE,GAAGA,MAAL;AAAa,OAAGX,WAAW;AAA3B,GAAb,CAD6B;AAEpCY,EAAAA,WAAW,EAAGD,MAAD,KAAa,EAAE,GAAGA,MAAL;AAAa,OAAGX,WAAW;AAA3B,GAAb,CAFuB;AAGpCa,EAAAA,MAAM,EAAE,CAACF,MAAD,EAAS;AAAEG,IAAAA;AAAF,GAAT,MAAuB,EAAE,GAAGH,MAAL;AAAa,OAAGX,WAAW,CAACc,IAAI,CAACzB,KAAN;AAA3B,GAAvB,CAH4B;AAIpC0B,EAAAA,WAAW,EAAE,CAACJ,MAAD,EAAS;AAAEG,IAAAA;AAAF,GAAT,MAAuB,EAClC,GAAGH,MAD+B;AAElC,OAAGX,WAAW,CAACc,IAAI,CAACzB,KAAN;AAFoB,GAAvB;AAJuB,CAAtC","sourcesContent":["import * as React from \"react\";\nimport { allColorRecords, randomColorRecord } from \"../color-grid/colors\";\nimport Select, { Styles } from \"react-select\";\nimport css from \"./blobs.module.css\";\n\nexport type ColorSelectValue = {\n  label: string;\n  value: string;\n};\n\nexport type ColorSelectProps = {\n  onChange(value: ColorSelectValue): void;\n  value: ColorSelectValue;\n};\n\nconst ColorSelect: React.FC<ColorSelectProps> = ({ value, onChange }) => {\n  return (\n    <div className={css.colorGroup}>\n      <Select<ColorSelectValue>\n        label=\"Colors\"\n        value={value}\n        onChange={(v) => onChange(v as ColorSelectValue)}\n        options={allColorRecords}\n        styles={colourStyles}\n      />\n\n      <label className={css.customColorPickerContainer}>\n        All colors:\n        <input\n          type=\"color\"\n          onChange={(e) => {\n            const value = e.currentTarget.value;\n            onChange({ value, label: value });\n          }}\n          value={value.value}\n        />\n      </label>\n\n      <div className={css.rightPos}>\n        <button\n          className={css.smallButton}\n          onClick={() => onChange(randomColorRecord())}\n          type=\"button\"\n        >\n          Random color\n        </button>\n      </div>\n    </div>\n  );\n};\nexport default ColorSelect;\n\nconst colorSwatch = (color = \"#ccc\") => ({\n  alignItems: \"center\",\n  display: \"flex\",\n\n  \":before\": {\n    backgroundColor: color,\n    borderRadius: 3,\n    content: '\" \"',\n    display: \"block\",\n    marginRight: 8,\n    height: 15,\n    width: 25,\n  },\n});\n\nconst colourStyles: Partial<Styles> = {\n  input: (styles) => ({ ...styles, ...colorSwatch() }),\n  placeholder: (styles) => ({ ...styles, ...colorSwatch() }),\n  option: (styles, { data }) => ({ ...styles, ...colorSwatch(data.value) }),\n  singleValue: (styles, { data }) => ({\n    ...styles,\n    ...colorSwatch(data.value),\n  }),\n};\n"]},"metadata":{},"sourceType":"module"}