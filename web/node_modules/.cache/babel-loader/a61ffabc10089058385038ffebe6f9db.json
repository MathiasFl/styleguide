{"ast":null,"code":"var _jsxFileName = \"/Users/mikaelbrevik/Sites/variant/styleguide/web/src/App.tsx\";\nimport React, { useEffect, useState, useRef } from \"react\";\nimport ColorSection from \"./color-grid\";\nimport css from \"./app.module.css\";\nimport TypographyInfo from \"./typopgraphy-info\";\nimport BlobGenerator from \"./blobs\";\n\nfunction App() {\n  const [val, ref] = usePercentageInView();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: css.container,\n    style: {\n      [\"--bg-opacity\"]: 1 - val\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: css.hero,\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  }, \"Variant Styleguide\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: css.section,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, \"Logo\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: css.logoSection,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"/logo/variant-bw.svg\",\n    alt: \"Variant\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"img\", {\n    src: \"/logo/variant-colors.svg\",\n    alt: \"Variant\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, \"For the color version you are encouraged to make your own twist with cliped illustration. Make sure to check the contrast where you use it.\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: css.section,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, \"Typography\"), /*#__PURE__*/React.createElement(TypographyInfo, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: css.section,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, \"Colors\"), /*#__PURE__*/React.createElement(ColorSection, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: css.section,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, \"Blobs\"), /*#__PURE__*/React.createElement(BlobGenerator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default App;\n\nconst usePercentageInView = () => {\n  const [value, setValue] = useState(1);\n  const ref = useRef(null);\n  useEffect(() => {\n    const percentageSeen = throttle(() => {\n      if (!ref.current) return;\n      const node = ref.current;\n      const scrollTop = window.scrollY;\n      const elementOffsetTop = node.offsetTop;\n      const elementHeight = node.offsetHeight;\n      const distance = scrollTop - elementOffsetTop;\n      const percentage = Math.round(distance / (elementHeight / 100));\n      const newValue = Number((Math.min(100, Math.max(0, percentage)) / 100).toPrecision(1));\n      setValue(newValue);\n    }, 30);\n    percentageSeen();\n    window.addEventListener(\"scroll\", percentageSeen, {\n      passive: true\n    });\n    return () => window.addEventListener(\"scroll\", percentageSeen);\n  }, [ref]);\n  return [value, ref];\n};\n\nfunction throttle(func, timeout) {\n  let ready = true;\n  return () => {\n    if (!ready) {\n      return;\n    }\n\n    ready = false;\n    func();\n    setTimeout(() => {\n      ready = true;\n    }, timeout);\n  };\n}","map":{"version":3,"sources":["/Users/mikaelbrevik/Sites/variant/styleguide/web/src/App.tsx"],"names":["React","useEffect","useState","useRef","ColorSection","css","TypographyInfo","BlobGenerator","App","val","ref","usePercentageInView","container","hero","section","logoSection","value","setValue","percentageSeen","throttle","current","node","scrollTop","window","scrollY","elementOffsetTop","offsetTop","elementHeight","offsetHeight","distance","percentage","Math","round","newValue","Number","min","max","toPrecision","addEventListener","passive","func","timeout","ready","setTimeout"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\nimport ColorSection from \"./color-grid\";\nimport css from \"./app.module.css\";\nimport TypographyInfo from \"./typopgraphy-info\";\nimport BlobGenerator from \"./blobs\";\n\nfunction App() {\n  const [val, ref] = usePercentageInView<HTMLDivElement>();\n  return (\n    <div className={css.container} style={{ [\"--bg-opacity\" as any]: 1 - val }}>\n      <div className={css.hero} ref={ref}>\n        <h1>Variant Styleguide</h1>\n      </div>\n\n      <div className={css.section}>\n        <h2>Logo</h2>\n\n        <div className={css.logoSection}>\n          <img src=\"/logo/variant-bw.svg\" alt=\"Variant\" />\n          <img src=\"/logo/variant-colors.svg\" alt=\"Variant\" />\n        </div>\n\n        <p>\n          For the color version you are encouraged to make your own twist with\n          cliped illustration. Make sure to check the contrast where you use it.\n        </p>\n      </div>\n\n      <div className={css.section}>\n        <h2>Typography</h2>\n\n        <TypographyInfo />\n      </div>\n\n      <div className={css.section}>\n        <h2>Colors</h2>\n\n        <ColorSection />\n      </div>\n\n      <div className={css.section}>\n        <h2>Blobs</h2>\n\n        <BlobGenerator />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n\nconst usePercentageInView = <T extends HTMLElement>(): [\n  number,\n  React.RefObject<T>\n] => {\n  const [value, setValue] = useState<number>(1);\n  const ref = useRef<T>(null);\n\n  useEffect(() => {\n    const percentageSeen = throttle(() => {\n      if (!ref.current) return;\n      const node = ref.current;\n      const scrollTop = window.scrollY;\n      const elementOffsetTop = node.offsetTop;\n      const elementHeight = node.offsetHeight;\n      const distance = scrollTop - elementOffsetTop;\n\n      const percentage = Math.round(distance / (elementHeight / 100));\n      const newValue = Number(\n        (Math.min(100, Math.max(0, percentage)) / 100).toPrecision(1)\n      );\n      setValue(newValue);\n    }, 30);\n\n    percentageSeen();\n    window.addEventListener(\"scroll\", percentageSeen, {\n      passive: true,\n    });\n    return () => window.addEventListener(\"scroll\", percentageSeen);\n  }, [ref]);\n\n  return [value, ref];\n};\n\nfunction throttle(func: () => void, timeout: number) {\n  let ready: boolean = true;\n  return () => {\n    if (!ready) {\n      return;\n    }\n\n    ready = false;\n    func();\n    setTimeout(() => {\n      ready = true;\n    }, timeout);\n  };\n}\n"]},"metadata":{},"sourceType":"module"}