{"ast":null,"code":"import React from 'react';\nconst {\n  useEffect,\n  useCallback,\n  useState,\n  useRef\n} = React;\nexport const useThrottleCallback = (callback, fps = 30, leading = false) => {\n  const nextTimeout = useRef(null),\n        tailTimeout = useRef(null),\n        calledLeading = useRef(false),\n        wait = 1000 / fps; // cleans up pending timeouts when the function changes\n\n  function _ref() {\n    if (nextTimeout.current !== null) {\n      clearTimeout(nextTimeout.current);\n      nextTimeout.current = null;\n    }\n\n    if (tailTimeout.current !== null) {\n      clearTimeout(tailTimeout.current);\n      tailTimeout.current = null;\n    }\n\n    calledLeading.current = false;\n  }\n\n  useEffect(() => _ref, [callback, fps]);\n  return useCallback(function () {\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    const self = this; // eslint-disable-next-line prefer-rest-params\n\n    const args = arguments;\n\n    function _ref2() {\n      nextTimeout.current = null;\n      tailTimeout.current === null && (calledLeading.current = false);\n      callback.apply(self, args);\n    }\n\n    function _ref3() {\n      tailTimeout.current = null;\n      calledLeading.current = false;\n      nextTimeout.current === null && callback.apply(self, args);\n    }\n\n    if (nextTimeout.current === null) {\n      const next = _ref2;\n\n      if (leading && !calledLeading.current) {\n        // leading\n        next();\n        calledLeading.current = true;\n      } else {\n        // head\n        nextTimeout.current = setTimeout(next, wait);\n      }\n    } else {\n      // tail\n      tailTimeout.current !== null && clearTimeout(tailTimeout.current);\n      tailTimeout.current = setTimeout(_ref3, wait);\n    }\n  }, [callback, fps]);\n};\nexport const useThrottle = (initialState, fps, leading) => {\n  const _ref_0 = useState(initialState);\n\n  const setState = _ref_0[1];\n  const state = _ref_0[0];\n  return [state, useThrottleCallback(setState, fps, leading)];\n};\nexport default useThrottle;","map":{"version":3,"sources":["/Users/mikaelbrevik/Sites/variant/styleguide/node_modules/@react-hook/throttle/dist/module/index.js"],"names":["React","useEffect","useCallback","useState","useRef","useThrottleCallback","callback","fps","leading","nextTimeout","tailTimeout","calledLeading","wait","_ref","current","clearTimeout","self","args","arguments","_ref2","apply","_ref3","next","setTimeout","useThrottle","initialState","_ref_0","setState","state"],"mappings":"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","sourcesContent":["import React from 'react'\nconst {useEffect, useCallback, useState, useRef} = React\nexport const useThrottleCallback = (callback, fps = 30, leading = false) => {\n  const nextTimeout = useRef(null),\n    tailTimeout = useRef(null),\n    calledLeading = useRef(false),\n    wait = 1000 / fps // cleans up pending timeouts when the function changes\n\n  function _ref() {\n    if (nextTimeout.current !== null) {\n      clearTimeout(nextTimeout.current)\n      nextTimeout.current = null\n    }\n\n    if (tailTimeout.current !== null) {\n      clearTimeout(tailTimeout.current)\n      tailTimeout.current = null\n    }\n\n    calledLeading.current = false\n  }\n\n  useEffect(() => _ref, [callback, fps])\n  return useCallback(\n    function () {\n      // eslint-disable-next-line @typescript-eslint/no-this-alias\n      const self = this // eslint-disable-next-line prefer-rest-params\n\n      const args = arguments\n\n      function _ref2() {\n        nextTimeout.current = null\n        tailTimeout.current === null && (calledLeading.current = false)\n        callback.apply(self, args)\n      }\n\n      function _ref3() {\n        tailTimeout.current = null\n        calledLeading.current = false\n        nextTimeout.current === null && callback.apply(self, args)\n      }\n\n      if (nextTimeout.current === null) {\n        const next = _ref2\n\n        if (leading && !calledLeading.current) {\n          // leading\n          next()\n          calledLeading.current = true\n        } else {\n          // head\n          nextTimeout.current = setTimeout(next, wait)\n        }\n      } else {\n        // tail\n        tailTimeout.current !== null && clearTimeout(tailTimeout.current)\n        tailTimeout.current = setTimeout(_ref3, wait)\n      }\n    },\n    [callback, fps]\n  )\n}\nexport const useThrottle = (initialState, fps, leading) => {\n  const _ref_0 = useState(initialState)\n\n  const setState = _ref_0[1]\n  const state = _ref_0[0]\n  return [state, useThrottleCallback(setState, fps, leading)]\n}\nexport default useThrottle\n"]},"metadata":{},"sourceType":"module"}