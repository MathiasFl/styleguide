{"ast":null,"code":"var _jsxFileName = \"/Users/mikaelbrevik/Sites/variant/styleguide/web/src/blobs/index.tsx\";\nimport * as React from \"react\";\nimport * as blobs2 from \"blobs/v2\";\nimport { useState, useEffect, useRef } from \"react\";\nimport { allColorRecords, randomColorRecord, allColors } from \"../color-grid/colors\";\nimport css from \"./blobs.module.css\";\nimport CopyableText from \"../components/copyable-text\";\nimport SvgBlob from \"../components/svg-blob\";\nimport useThrottle from \"@react-hook/throttle\";\nimport DownloadGroup from \"./download-group\";\nimport ColorSelect from \"./color-select\";\nimport { SliderInput, SliderTrack, SliderTrackHighlight, SliderHandle, SliderMarker } from \"@reach/slider\";\nimport \"@reach/slider/styles.css\";\nconst DEFAULTS_POINTS = {\n  min: 3,\n  max: 15\n};\nconst DEFAULTS_SPREAD = {\n  min: 1,\n  max: 20\n};\n\nconst BlobGenerator = () => {\n  const [image, setImage] = useState();\n  const [points, setPoints] = useThrottle(2);\n  const [size, setSize] = useThrottle(250);\n  const [randomness, setRandomness] = useThrottle(9);\n  const [color, setColor] = useThrottle(allColorRecords[0]);\n  const [imageScale, setScale] = useThrottle(100);\n  const [imagePosition, setImagePosition] = useThrottle({\n    x: 0,\n    y: 0\n  });\n  const [seed, setSeed] = useState(Math.random());\n\n  const reshape = () => setSeed(Math.random());\n\n  useEffect(reshape, [points, randomness]);\n\n  const random = () => {\n    setPoints(pickRandom(DEFAULTS_POINTS));\n    setRandomness(pickRandom(DEFAULTS_POINTS));\n    setColor(randomColorRecord());\n    reshape();\n  };\n\n  const svgPath = blobs2.svgPath({\n    seed,\n    extraPoints: points,\n    randomness,\n    size\n  });\n  const svgOpts = {\n    path: svgPath,\n    color: color.value,\n    size,\n    image,\n    imageScale,\n    imagePosition\n  };\n  return /*#__PURE__*/React.createElement(\"section\", {\n    className: css.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"aside\", {\n    className: css.options,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Group, {\n    name: \"Points\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    min: DEFAULTS_POINTS.min,\n    max: DEFAULTS_POINTS.max,\n    onInput: i => setPoints(i - 3),\n    val: points + 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Group, {\n    name: \"Point spread\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    min: DEFAULTS_SPREAD.min,\n    max: DEFAULTS_SPREAD.max,\n    onInput: setRandomness,\n    val: randomness,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: css.rightPos,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: css.smallButton,\n    onClick: reshape,\n    type: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }\n  }, \"Reshape\")), /*#__PURE__*/React.createElement(Group, {\n    name: \"Size\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    min: 100,\n    max: 1000,\n    step: 10,\n    onInput: setSize,\n    val: size,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }\n  })), !image && /*#__PURE__*/React.createElement(Group, {\n    name: \"Fill color\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ColorSelect, {\n    onChange: setColor,\n    value: color,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Group, {\n    name: \"Image (optional)\",\n    className: css.imageUploadGroup,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(UploadFile, {\n    value: image,\n    onChange: setImage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }\n  }), image && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 15\n    }\n  }, \"Image scale\"), /*#__PURE__*/React.createElement(Input, {\n    val: imageScale,\n    min: 10,\n    max: 200,\n    onInput: setScale,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 15\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: css.canvas,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(SvgBlob, Object.assign({}, svgOpts, {\n    imagePositionChanged: setImagePosition,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }\n  }))), /*#__PURE__*/React.createElement(\"button\", {\n    className: css.randomButton,\n    onClick: random,\n    type: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }\n  }, \"Random\"), /*#__PURE__*/React.createElement(\"footer\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"caption\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }\n  }, \"Seed: \", /*#__PURE__*/React.createElement(CopyableText, {\n    Component: \"span\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 17\n    }\n  }, seed)), /*#__PURE__*/React.createElement(\"div\", {\n    className: css.downloadLinks,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(DownloadGroup, Object.assign({\n    seed: seed\n  }, svgOpts, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 11\n    }\n  })))));\n};\n\nexport default BlobGenerator;\n\nconst Group = ({\n  name,\n  children,\n  className\n}) => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: className,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }\n  }, name), children);\n};\n\nconst Input = ({\n  onInput,\n  min,\n  max,\n  val,\n  step = 1\n}) => {\n  return /*#__PURE__*/React.createElement(SliderInput, {\n    min: min,\n    max: max,\n    step: step,\n    onChange: v => onInput(v),\n    value: val,\n    style: {\n      paddingTop: \"1rem\",\n      paddingBottom: \"1rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(SliderTrack, {\n    style: {\n      background: allColors.secondary4__tint3\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(SliderTrackHighlight, {\n    style: {\n      background: allColors.secondary1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(SliderMarker, {\n    value: val,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(SliderHandle, {\n    style: {\n      borderColor: allColors.secondary1,\n      background: allColors.secondary1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 9\n    }\n  })));\n};\n\nconst UploadFile = ({\n  value,\n  onChange\n}) => {\n  const ref = useRef(null);\n\n  const internalChange = e => {\n    var _e$currentTarget$file;\n\n    const file = (_e$currentTarget$file = e.currentTarget.files) === null || _e$currentTarget$file === void 0 ? void 0 : _e$currentTarget$file[0];\n    onChange(file);\n  };\n\n  useEffect(() => {\n    if (!value && ref.current) {\n      ref.current.value = \"\";\n    }\n  }, [value]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: css.fileContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    ref: ref,\n    id: \"file-imageupload\",\n    type: \"file\",\n    accept: \"image/png, image/jpeg\",\n    onChange: internalChange,\n    className: css.fileInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"file-imageupload\",\n    title: value === null || value === void 0 ? void 0 : value.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 7\n    }\n  }, value ? \"File: \" + value.name : \"Choose file\"), value && /*#__PURE__*/React.createElement(\"button\", {\n    className: css.clearIcon,\n    onClick: () => onChange(undefined),\n    type: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    role: \"img\",\n    \"aria-label\": \"Clear image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 11\n    }\n  }, \"\\u274C\")));\n};\n\nfunction pickRandom({\n  min,\n  max\n}) {\n  return Math.random() * (max - min) + min;\n}","map":{"version":3,"sources":["/Users/mikaelbrevik/Sites/variant/styleguide/web/src/blobs/index.tsx"],"names":["React","blobs2","useState","useEffect","useRef","allColorRecords","randomColorRecord","allColors","css","CopyableText","SvgBlob","useThrottle","DownloadGroup","ColorSelect","SliderInput","SliderTrack","SliderTrackHighlight","SliderHandle","SliderMarker","DEFAULTS_POINTS","min","max","DEFAULTS_SPREAD","BlobGenerator","image","setImage","points","setPoints","size","setSize","randomness","setRandomness","color","setColor","imageScale","setScale","imagePosition","setImagePosition","x","y","seed","setSeed","Math","random","reshape","pickRandom","svgPath","extraPoints","svgOpts","path","value","container","options","i","rightPos","smallButton","imageUploadGroup","canvas","randomButton","downloadLinks","Group","name","children","className","Input","onInput","val","step","v","paddingTop","paddingBottom","background","secondary4__tint3","secondary1","borderColor","UploadFile","onChange","ref","internalChange","e","file","currentTarget","files","current","fileContainer","fileInput","clearIcon","undefined"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport * as blobs2 from \"blobs/v2\";\nimport { useState, useEffect, ChangeEvent, useRef } from \"react\";\nimport {\n  allColorRecords,\n  randomColorRecord,\n  allColors,\n} from \"../color-grid/colors\";\nimport css from \"./blobs.module.css\";\nimport CopyableText from \"../components/copyable-text\";\nimport SvgBlob, { SvgBlobProps } from \"../components/svg-blob\";\nimport useThrottle from \"@react-hook/throttle\";\nimport DownloadGroup from \"./download-group\";\nimport ColorSelect, { ColorSelectValue } from \"./color-select\";\n\nimport {\n  SliderInput,\n  SliderTrack,\n  SliderTrackHighlight,\n  SliderHandle,\n  SliderMarker,\n} from \"@reach/slider\";\nimport \"@reach/slider/styles.css\";\n\ntype Range = {\n  min: number;\n  max: number;\n};\n\nconst DEFAULTS_POINTS: Range = {\n  min: 3,\n  max: 15,\n} as const;\n\nconst DEFAULTS_SPREAD: Range = {\n  min: 1,\n  max: 20,\n};\n\nconst BlobGenerator: React.FC<{}> = () => {\n  const [image, setImage] = useState<File | undefined>();\n  const [points, setPoints] = useThrottle<number>(2);\n  const [size, setSize] = useThrottle<number>(250);\n  const [randomness, setRandomness] = useThrottle<number>(9);\n  const [color, setColor] = useThrottle<ColorSelectValue>(allColorRecords[0]);\n  const [imageScale, setScale] = useThrottle<number>(100);\n  const [imagePosition, setImagePosition] = useThrottle<{\n    x: number;\n    y: number;\n  }>({ x: 0, y: 0 });\n\n  const [seed, setSeed] = useState(Math.random());\n  const reshape = () => setSeed(Math.random());\n  useEffect(reshape, [points, randomness]);\n\n  const random = () => {\n    setPoints(pickRandom(DEFAULTS_POINTS));\n    setRandomness(pickRandom(DEFAULTS_POINTS));\n    setColor(randomColorRecord());\n    reshape();\n  };\n\n  const svgPath = blobs2.svgPath({\n    seed,\n    extraPoints: points,\n    randomness,\n    size,\n  });\n\n  const svgOpts: SvgBlobProps = {\n    path: svgPath,\n    color: color.value,\n    size,\n    image,\n    imageScale,\n    imagePosition,\n  };\n\n  return (\n    <section className={css.container}>\n      <aside className={css.options}>\n        <Group name=\"Points\">\n          <Input\n            min={DEFAULTS_POINTS.min}\n            max={DEFAULTS_POINTS.max}\n            onInput={(i) => setPoints(i - 3)}\n            val={points + 3}\n          />\n        </Group>\n        <Group name=\"Point spread\">\n          <Input\n            min={DEFAULTS_SPREAD.min}\n            max={DEFAULTS_SPREAD.max}\n            onInput={setRandomness}\n            val={randomness}\n          />\n        </Group>\n\n        <div className={css.rightPos}>\n          <button className={css.smallButton} onClick={reshape} type=\"button\">\n            Reshape\n          </button>\n        </div>\n\n        <Group name=\"Size\">\n          <Input min={100} max={1000} step={10} onInput={setSize} val={size} />\n        </Group>\n\n        {!image && (\n          <Group name=\"Fill color\">\n            <ColorSelect onChange={setColor} value={color} />\n          </Group>\n        )}\n\n        <Group name=\"Image (optional)\" className={css.imageUploadGroup}>\n          <UploadFile value={image} onChange={setImage} />\n\n          {image && (\n            <div>\n              <p>Image scale</p>\n              <Input val={imageScale} min={10} max={200} onInput={setScale} />\n            </div>\n          )}\n        </Group>\n      </aside>\n\n      <div className={css.canvas}>\n        <SvgBlob {...svgOpts} imagePositionChanged={setImagePosition} />\n      </div>\n\n      <button className={css.randomButton} onClick={random} type=\"button\">\n        Random\n      </button>\n\n      <footer>\n        <p className=\"caption\">\n          Seed: <CopyableText Component=\"span\">{seed}</CopyableText>\n        </p>\n        <div className={css.downloadLinks}>\n          <DownloadGroup seed={seed} {...svgOpts} />\n        </div>\n      </footer>\n    </section>\n  );\n};\n\nexport default BlobGenerator;\n\nconst Group: React.FC<{\n  name: string;\n  className?: string;\n}> = ({ name, children, className }) => {\n  return (\n    <div className={className}>\n      <p>{name}</p>\n      {children}\n    </div>\n  );\n};\n\nconst Input: React.FC<{\n  val: number;\n  onInput: (val: number) => void;\n  min: number;\n  max: number;\n  step?: number;\n}> = ({ onInput, min, max, val, step = 1 }) => {\n  return (\n    <SliderInput\n      min={min}\n      max={max}\n      step={step}\n      onChange={(v) => onInput(v)}\n      value={val}\n      style={{\n        paddingTop: \"1rem\",\n        paddingBottom: \"1rem\",\n      }}\n    >\n      <SliderTrack style={{ background: allColors.secondary4__tint3 }}>\n        <SliderTrackHighlight style={{ background: allColors.secondary1 }} />\n        <SliderMarker value={val} />\n        <SliderHandle\n          style={{\n            borderColor: allColors.secondary1,\n            background: allColors.secondary1,\n          }}\n        />\n      </SliderTrack>\n    </SliderInput>\n  );\n};\n\nconst UploadFile: React.FC<{\n  value?: File;\n  onChange(imgBase64?: File): void;\n}> = ({ value, onChange }) => {\n  const ref = useRef<HTMLInputElement>(null);\n\n  const internalChange = (e: ChangeEvent<HTMLInputElement>) => {\n    const file = e.currentTarget.files?.[0];\n    onChange(file);\n  };\n\n  useEffect(() => {\n    if (!value && ref.current) {\n      ref.current.value = \"\";\n    }\n  }, [value]);\n\n  return (\n    <div className={css.fileContainer}>\n      <input\n        ref={ref}\n        id=\"file-imageupload\"\n        type=\"file\"\n        accept=\"image/png, image/jpeg\"\n        onChange={internalChange}\n        className={css.fileInput}\n      />\n      <label htmlFor=\"file-imageupload\" title={value?.name}>\n        {value ? \"File: \" + value.name : \"Choose file\"}\n      </label>\n\n      {value && (\n        <button\n          className={css.clearIcon}\n          onClick={() => onChange(undefined)}\n          type=\"button\"\n        >\n          <span role=\"img\" aria-label=\"Clear image\">\n            ❌\n          </span>\n        </button>\n      )}\n    </div>\n  );\n};\n\nfunction pickRandom({ min, max }: Range) {\n  return Math.random() * (max - min) + min;\n}\n"]},"metadata":{},"sourceType":"module"}