{"ast":null,"code":"var _jsxFileName = \"/Users/mikaelbrevik/Sites/variant/styleguide/web/src/blobs/download-group.tsx\";\nimport { blobAsString } from \"../components/svg-blob\";\nimport React from \"react\";\nimport css from \"./blobs.module.css\";\nconst DownloadGroup = React.memo(({\n  seed,\n  ...props\n}) => {\n  const generateAndDownload = async type => {\n    const svgString = await blobAsString(props);\n    const filename = `${String(seed).substr(2)}.${type}`;\n    const url = type === \"svg\" ? `data:image/svg+xml;base64,\\n${btoa(svgString)}` : await generatePngBlobUrl(svgString, props.size);\n    return download(filename, url);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: css.buttonGroup,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: css.button,\n    onClick: () => generateAndDownload(\"svg\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, \"Download svg\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: css.button,\n    onClick: () => generateAndDownload(\"png\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, \"Download png\"));\n});\nexport default DownloadGroup;\n\nfunction generatePngBlobUrl(svgString, size) {\n  return new Promise(function (res) {\n    const canvas = document.createElement(\"canvas\");\n    canvas.width = size;\n    canvas.height = size;\n    const ctx = canvas.getContext(\"2d\");\n    const img = new Image();\n    const svg = new Blob([svgString], {\n      type: \"image/svg+xml;charset=utf-8\"\n    });\n    const url = URL.createObjectURL(svg);\n\n    img.onload = function () {\n      ctx === null || ctx === void 0 ? void 0 : ctx.drawImage(img, 0, 0);\n      const png = canvas.toDataURL(\"image/png\", 100);\n      URL.revokeObjectURL(png);\n      res(png);\n    };\n\n    img.src = url;\n  });\n}\n\nfunction download(filename, content) {\n  var element = document.createElement(\"a\");\n  element.setAttribute(\"href\", content);\n  element.setAttribute(\"download\", filename);\n  element.style.display = \"none\";\n  document.body.appendChild(element);\n  element.click();\n  document.body.removeChild(element);\n}","map":{"version":3,"sources":["/Users/mikaelbrevik/Sites/variant/styleguide/web/src/blobs/download-group.tsx"],"names":["blobAsString","React","css","DownloadGroup","memo","seed","props","generateAndDownload","type","svgString","filename","String","substr","url","btoa","generatePngBlobUrl","size","download","buttonGroup","button","Promise","res","canvas","document","createElement","width","height","ctx","getContext","img","Image","svg","Blob","URL","createObjectURL","onload","drawImage","png","toDataURL","revokeObjectURL","src","content","element","setAttribute","style","display","body","appendChild","click","removeChild"],"mappings":";AAAA,SAAuBA,YAAvB,QAA2C,wBAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,oBAAhB;AAEA,MAAMC,aAAwD,GAAGF,KAAK,CAACG,IAAN,CAC/D,CAAC;AAAEC,EAAAA,IAAF;AAAQ,KAAGC;AAAX,CAAD,KAAwB;AACtB,QAAMC,mBAAmB,GAAG,MAAOC,IAAP,IAA+B;AACzD,UAAMC,SAAS,GAAG,MAAMT,YAAY,CAACM,KAAD,CAApC;AACA,UAAMI,QAAQ,GAAI,GAAEC,MAAM,CAACN,IAAD,CAAN,CAAaO,MAAb,CAAoB,CAApB,CAAuB,IAAGJ,IAAK,EAAnD;AAEA,UAAMK,GAAG,GACPL,IAAI,KAAK,KAAT,GACK,+BAA8BM,IAAI,CAACL,SAAD,CAAY,EADnD,GAEI,MAAMM,kBAAkB,CAACN,SAAD,EAAYH,KAAK,CAACU,IAAlB,CAH9B;AAKA,WAAOC,QAAQ,CAACP,QAAD,EAAWG,GAAX,CAAf;AACD,GAVD;;AAWA,sBACE;AAAK,IAAA,SAAS,EAAEX,GAAG,CAACgB,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,SAAS,EAAEhB,GAAG,CAACiB,MADjB;AAEE,IAAA,OAAO,EAAE,MAAMZ,mBAAmB,CAAC,KAAD,CAFpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAOE;AACE,IAAA,SAAS,EAAEL,GAAG,CAACiB,MADjB;AAEE,IAAA,OAAO,EAAE,MAAMZ,mBAAmB,CAAC,KAAD,CAFpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAPF,CADF;AAgBD,CA7B8D,CAAjE;AAgCA,eAAeJ,aAAf;;AAEA,SAASY,kBAAT,CAA4BN,SAA5B,EAA+CO,IAA/C,EAA6D;AAC3D,SAAO,IAAII,OAAJ,CAAoB,UAAUC,GAAV,EAAe;AACxC,UAAMC,MAAM,GAAGC,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAf;AACAF,IAAAA,MAAM,CAACG,KAAP,GAAeT,IAAf;AACAM,IAAAA,MAAM,CAACI,MAAP,GAAgBV,IAAhB;AACA,UAAMW,GAAG,GAAGL,MAAM,CAACM,UAAP,CAAkB,IAAlB,CAAZ;AACA,UAAMC,GAAG,GAAG,IAAIC,KAAJ,EAAZ;AAEA,UAAMC,GAAG,GAAG,IAAIC,IAAJ,CAAS,CAACvB,SAAD,CAAT,EAAsB;AAAED,MAAAA,IAAI,EAAE;AAAR,KAAtB,CAAZ;AACA,UAAMK,GAAG,GAAGoB,GAAG,CAACC,eAAJ,CAAoBH,GAApB,CAAZ;;AAEAF,IAAAA,GAAG,CAACM,MAAJ,GAAa,YAAY;AACvBR,MAAAA,GAAG,SAAH,IAAAA,GAAG,WAAH,YAAAA,GAAG,CAAES,SAAL,CAAeP,GAAf,EAAoB,CAApB,EAAuB,CAAvB;AACA,YAAMQ,GAAG,GAAGf,MAAM,CAACgB,SAAP,CAAiB,WAAjB,EAA8B,GAA9B,CAAZ;AACAL,MAAAA,GAAG,CAACM,eAAJ,CAAoBF,GAApB;AACAhB,MAAAA,GAAG,CAACgB,GAAD,CAAH;AACD,KALD;;AAMAR,IAAAA,GAAG,CAACW,GAAJ,GAAU3B,GAAV;AACD,GAjBM,CAAP;AAkBD;;AAED,SAASI,QAAT,CAAkBP,QAAlB,EAAoC+B,OAApC,EAAqD;AACnD,MAAIC,OAAO,GAAGnB,QAAQ,CAACC,aAAT,CAAuB,GAAvB,CAAd;AACAkB,EAAAA,OAAO,CAACC,YAAR,CAAqB,MAArB,EAA6BF,OAA7B;AACAC,EAAAA,OAAO,CAACC,YAAR,CAAqB,UAArB,EAAiCjC,QAAjC;AACAgC,EAAAA,OAAO,CAACE,KAAR,CAAcC,OAAd,GAAwB,MAAxB;AACAtB,EAAAA,QAAQ,CAACuB,IAAT,CAAcC,WAAd,CAA0BL,OAA1B;AACAA,EAAAA,OAAO,CAACM,KAAR;AACAzB,EAAAA,QAAQ,CAACuB,IAAT,CAAcG,WAAd,CAA0BP,OAA1B;AACD","sourcesContent":["import { SvgBlobProps, blobAsString } from \"../components/svg-blob\";\nimport React from \"react\";\nimport css from \"./blobs.module.css\";\n\nconst DownloadGroup: React.FC<{ seed: number } & SvgBlobProps> = React.memo(\n  ({ seed, ...props }) => {\n    const generateAndDownload = async (type: \"svg\" | \"png\") => {\n      const svgString = await blobAsString(props);\n      const filename = `${String(seed).substr(2)}.${type}`;\n\n      const url =\n        type === \"svg\"\n          ? `data:image/svg+xml;base64,\\n${btoa(svgString)}`\n          : await generatePngBlobUrl(svgString, props.size!);\n\n      return download(filename, url);\n    };\n    return (\n      <div className={css.buttonGroup}>\n        <button\n          className={css.button}\n          onClick={() => generateAndDownload(\"svg\")}\n        >\n          Download svg\n        </button>\n        <button\n          className={css.button}\n          onClick={() => generateAndDownload(\"png\")}\n        >\n          Download png\n        </button>\n      </div>\n    );\n  }\n);\n\nexport default DownloadGroup;\n\nfunction generatePngBlobUrl(svgString: string, size: number) {\n  return new Promise<string>(function (res) {\n    const canvas = document.createElement(\"canvas\");\n    canvas.width = size;\n    canvas.height = size;\n    const ctx = canvas.getContext(\"2d\");\n    const img = new Image();\n\n    const svg = new Blob([svgString], { type: \"image/svg+xml;charset=utf-8\" });\n    const url = URL.createObjectURL(svg);\n\n    img.onload = function () {\n      ctx?.drawImage(img, 0, 0);\n      const png = canvas.toDataURL(\"image/png\", 100);\n      URL.revokeObjectURL(png);\n      res(png);\n    };\n    img.src = url;\n  });\n}\n\nfunction download(filename: string, content: string) {\n  var element = document.createElement(\"a\");\n  element.setAttribute(\"href\", content);\n  element.setAttribute(\"download\", filename);\n  element.style.display = \"none\";\n  document.body.appendChild(element);\n  element.click();\n  document.body.removeChild(element);\n}\n"]},"metadata":{},"sourceType":"module"}